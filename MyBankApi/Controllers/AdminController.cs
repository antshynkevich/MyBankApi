using System.Text.Json;
using DataEntityAndAccessLayer;
using Microsoft.AspNetCore.Mvc;
using ServiceLayer;

namespace MyBankApi.Controllers;

[ApiController]
[Route("api/[controller]")]
public class AdminController : ControllerBase
{
    [HttpGet("get-from-file-and-show")]
    public async Task<IActionResult> GetAtmsFromFile([FromQuery] string filepath)
    {
        filepath = @"C:\Users\Anton\Downloads\atms1copy.json";
        await using FileStream openStream = System.IO.File.OpenRead(filepath);
        JsonAutogeneratedClass? jsonObject = await JsonSerializer.DeserializeAsync<JsonAutogeneratedClass>(openStream);
        return Ok(jsonObject);
    }

    [HttpGet("get-from-page-and-show")]
    public async Task<IActionResult> GetAtmsFromBankPage()
    {
        var url = $@"https://belarusbank.by/open-banking/v1.0/atms";
        var httpClient = new HttpClient();
        var response = await httpClient.GetAsync(url);
        JsonAutogeneratedClass? jsonObject = 
            await JsonSerializer.DeserializeAsync<JsonAutogeneratedClass>(await response.Content.ReadAsStreamAsync());
        return Ok(jsonObject?.Data.ATM);
    }


    [HttpGet("add-from-file-to-db")]
    public async Task<IActionResult> AddAtmsFromFile([FromServices] BankDbContext context)
    {
        var filepath = @"C:\Users\Anton\Downloads\atms1copy.json";
        await using FileStream openStream = System.IO.File.OpenRead(filepath);
        JsonAutogeneratedClass? jsonObject = await JsonSerializer.DeserializeAsync<JsonAutogeneratedClass>(openStream);
        var atmServ = new AtmRepositoryService(context);
        await atmServ.AddAtmsToDb(jsonObject);
        return Ok();
    }

    [HttpGet("add-from-api-page-to-db")]
    public async Task<IActionResult> AddAtmsFromPageToDatabase([FromServices] BankDbContext context)
    {
        var url = $@"https://belarusbank.by/open-banking/v1.0/atms";
        var httpClient = new HttpClient();
        var response = await httpClient.GetAsync(url);
        JsonAutogeneratedClass? jsonObject =
            await JsonSerializer.DeserializeAsync<JsonAutogeneratedClass>(await response.Content.ReadAsStreamAsync());
        var service = new AtmRepositoryService(context);
        await service.AddAtmsToDb(jsonObject);
        return Ok();
    }

    [HttpGet("get-data-from-db-and-show")]
    public async Task<IActionResult> GetAtmsFromDb([FromServices] BankDbContext context)
    {
        var atmService = new AtmRepositoryService(context);
        var atms = await atmService.GetAllAtms();
        return Ok(atms);
    }
}
